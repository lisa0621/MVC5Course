@*@using MVC5Course.Models*@
@model IEnumerable<Product>

@{

    //if (IsAjax)
    //{
    //    Layout = "";

    //}

    //ViewContext.RouteData.Values["controller"]

    //登入者
    //User.Identity.Name
    //已經登入
    //User.Identity.IsAuthenticated

    ViewBag.Title = "Index";
}

@helper HtmlActionLink(string action)
{
    <a href="@Url.Action(action)">
        <i class="img-circle"></i>
        <span class="hidden-tablet">Forms</span>
    </a>    
}

@HtmlActionLink("Create")

<h2>Index</h2>

<p>

    @Html.ActionLink("Home", "Index", "Home",null , new { @class = "btn" })

    <a class="logo" href="/Products/Create"></a>
    <a class="logo" href="@Url.Action("Create")"></a>
    @Html.ActionLink(" ", "Create", null, new { @class = "logo" })

    <a class="btn" data-test="123" href="/Products/Create">Create New</a>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn", data_test = "123" })
    @Html.ActionLink("Create New", "Create")
</p>
@*<p class="text-right">
        @using (Html.BeginForm())
            {
            <input type="search" name="search" value="" placeholder="請輸入關鍵字"/>
            @Html.TextBox("search");
            <input type="submit" value="搜尋" />
        }
    </p>*@

<p class="text-right">
    @Html.ActionLink("test", "ABC", new { id = 123 })
</p>

@*@using (Html.BeginForm(ViewContext.RouteData.Values["action"].ToString(),
    ViewContext.RouteData.Values["controller"].ToString(), FormMethod.Get)) { }*@

@using (Html.BeginForm("Index", "Products", FormMethod.Get))
{
    @:Active:
    <select name="active">
        <option>N/A</option>
        <option value="True"  selected="@(ViewBag.IsActive==true))">上架</option>
        <option value="False" selected="@(ViewBag.IsActive==false))">下架</option>
    </select>

    @:依據產品名稱篩選：
    @Html.DropDownList("ProductName","請選擇")

    //@Html.DropDownList("ProductName",null, "請選擇", new { onchange = "this.form.submit();"})

    <input type="search" name="search" value="" placeholder="請輸入關鍵字" />
    <input type="submit" value="搜尋" />
}

@using (Html.BeginForm())
{
    <div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>

    <table class="table">
        <tr>
            <th>
                V
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Active)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Stock)
            </th>
            <th></th>
        </tr>
        @{
            var data = Model.ToArray();

        }
        @for (var i = 0; i < data.Length; i++)
        {

            <tr>
                <td>
                    <input type="checkbox" name="ProductId" value="@data[i].ProductId" />
                </td>
                <td>
                    @Html.HiddenFor(modelItem => data[i].ProductId)
                    @Html.EditorFor(modelItem => data[i].ProductName)
                    @Html.ValidationMessageFor(modelItem => data[i].ProductName, "", new { @class = "text-danger" })
                </td>
                <td>
                    @*NT$ @String.Format("{0:C}", data[i].Price)
                        NT$ @String.Format("{0:0.0}", data[i].Price)*@
                    @Html.EditorFor(modelItem => data[i].Price)
                    @Html.ValidationMessageFor(modelItem => data[i].ProductName, "", new { @class = "text-danger" })
                </td>
                <td>
                    @*@Html.DisplayFor(modelItem => data[i].Active)*@
                    @*@if (data[i].Active.Value)
                        {
                            @:啟用
                        }
                        else
                        {
                            @:停用
                        }*@
                    @(data[i].Active.Value ? "啟用" : "停用")
                </td>
                <td>
                    @Html.EditorFor(modelItem => data[i].Stock)
                    @Html.ValidationMessageFor(modelItem => data[i].ProductName, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = data[i].ProductId }) |
                    @Html.ActionLink("Details", "Details", new { id = data[i].ProductId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = data[i].ProductId })
                </td>
            </tr>
        }

        <tr>
            <td><button type="submit">批次作業</button></td>
            <td></td>
            <td><a href="@Url.Action("BatchUpdate")" class="btn">更新價格為5元</a></td>
            <td></td>
            <td></td>
            <td></td>
        </tr>

    </table>

            }